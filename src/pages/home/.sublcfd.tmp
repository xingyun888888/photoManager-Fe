<style lang="less">
  .container{
    position: relative;
    width: 100%;
    height: 100vh;
    .next{
        position:absolute;
        left:50%;
        transform:translateX(-50%);
        width:80rpx;
        height:80rpx;
        bottom:20rpx;
        z-index:1000;

    }
  }
  #myMap{
    position: absolute;  
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
  }
  #myAudio{
    display:none;
  }
</style>
<template>
<audio  src="{{audioUrl}}" id="myAudio"  loop></audio>
  <view class="container">
    <map id="myMap" latitude="{{latitude}}" longitude="{{longitude}}" scale="{{scale}}" bindregionchange="bindregionchange" polyline="{{polyline}}" markers="{{markers}}" controls="{{controls}}" bindmarkertap="bindmarkertap"  bindcontroltap="bindcontroltap" show-location/>
    <image bindtap="toggleNext"  class="next" src="{{'/images/next-music.png'}}" alt=""/>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import AV from '../../utils/av-weapp-min';
  let  QQMapWX = require('../../utils/qqmap-wx-jssdk.min.js');
  export default class HomeIndex extends wepy.page {
    config = {
        navigationBarTitleText: '首页',
        navigationBarBackgroundColor: '#fb891a',
        navigationBarTextStyle: 'white',
    }
    components = {
    }


    data = {
        scale: 19,
        longitude:0,
        latitude:0,
        audioCtx:null,
        audioUrl:"http://v.vcfuhua.com/fj.mp3",
        currentMusicIndex:0,
        musicList:["http://v.vcfuhua.com/fj.mp3","http://v.vcfuhua.com/naxienian.mp3"]
    }  

    computed = {
    }

    methods = {
        toggleNext(){
            if(this.currentMusicIndex==0){
              this.audioUrl = this.musicList[1];
              this.currentMusicIndex=1; 
            }else{   
              this.audioUrl = this.musicList[1]; 
              this.currentMusicIndex=0;
            } 
            this.$apply(()=>{
                 this.audioCtx&&this.audioCtx.play(); 
            });
        }
    }

    events = {
      'index-emit': (...args) => {
        let $event = args[args.length - 1]
        console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`)
      }
    }
    
    onShow(){
       this.audioCtx&&this.audioCtx.play(); 
    }
    


    onLoad() {
        let audioCtx  = wx.createAudioContext('myAudio')
        this.audioCtx = audioCtx;
        wepy.$instance.globalData.audioCtx = audioCtx;
        audioCtx.play(); 
   
        // 实例化API核心类
        let qqmapsdk = new QQMapWX({
            key: 'HUMBZ-XNSKP-UHFDU-LZTEU-I263S-TVF7J'
        });

       wx.createMapContext("myMap");
       var query = new AV.Query("TestObject");

//       query.equalTo("title","工程师峰会");
//       query.find().then((res)=>{
//           console.log(res);
//       })


        wx.getLocation({
            type: "gcj02",
            success: (res) => {
                this.setData({
                    longitude: res.longitude,
                    latitude: res.latitude
                })
                qqmapsdk.reverseGeocoder({
				    location: {
				        latitude: res.longitude,
				        longitude: res.latitude
				    },
				    success: function(res) {
				        console.log(res);
				    },
				    fail: function(res) {
				        console.log(res);
				    },
				    complete: function(res) {
				        console.log(res);
				    }
				});
            }
        });
        // 获取本地数据-用户信息
        wx.getStorage({
            key: 'userInfo',
            // 能获取到则显示用户信息，并保持登录状态，不能就什么也不做
            success: (res) => {
                wx.hideLoading();
                this.setData({
                    userInfo: {
                        avatarUrl: res.data.userInfo.avatarUrl,
                        nickName: res.data.userInfo.nickName
                    },
                    bType: res.data.bType,
                    actionText: res.data.actionText,
                    lock: true
                })
            }
        });
        this.$apply();

    }

  }
</script>
